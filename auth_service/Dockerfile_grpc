FROM python:3.12-slim

# копируем бинарник с оф. сайта
COPY --from=ghcr.io/astral-sh/uv:0.4.9 /uv /bin/uv

# чтоб байткод кэшировался, и в докере быстрее устанавливалось
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy
ENV PYTHONPATH /app

WORKDIR /app

# чтоб кэшировалось докером на будущее
COPY uv.lock pyproject.toml /app/
RUN --mount=type=cache,target=/root/.cache/uv \
  uv sync --frozen --no-install-project --no-dev

# чтобы если код изменился, а зависимости нет, то зависимости бы не переустанавливались
COPY . /app
RUN --mount=type=cache,target=/root/.cache/uv \
  uv sync --frozen --no-dev

# нужно чтоб в докере на винде запускалось, там баг с форматом файла
RUN sed -i 's/\r$//' /app/launch_main.sh  && chmod +x /app/launch_main.sh
ENV PATH="/app/.venv/bin:$PATH"

CMD ["/app/launch_main.sh"]



FROM python:3.12-slim

# копируем бинарник с оф. сайта
COPY --from=ghcr.io/astral-sh/uv:0.4.9 /uv /bin/uv

# чтоб байткод кэшировался, и в докере быстрее устанавливалось
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy

WORKDIR /app

# чтоб кэшировалось докером на будущее
COPY uv.lock pyproject.toml /app/
RUN --mount=type=cache,target=/root/.cache/uv \
  uv sync --frozen --no-install-project --no-dev

# чтобы если код изменился, а зависимости нет, то зависимости бы не переустанавливались
COPY . /app
RUN --mount=type=cache,target=/root/.cache/uv \
  uv sync --frozen --no-dev

# чтобы наш проект видел зависимости
ENV PATH="/app/.venv/bin:$PATH"


CMD ["/app/server.py"]
